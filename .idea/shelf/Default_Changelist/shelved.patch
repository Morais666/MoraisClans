Index: ../MoraisMinas/src/pt/morais_/minas/a.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../MoraisMinas/src/pt/morais_/minas/a.java	(date 1551729789624)
+++ ../MoraisMinas/src/pt/morais_/minas/a.java	(date 1551729789624)
@@ -0,0 +1,75 @@
+package pt.morais_.minas;
+
+import net.milkbowl.vault.economy.Economy;
+import net.milkbowl.vault.permission.Permission;
+
+import org.bukkit.Bukkit;
+import org.bukkit.event.Listener;
+import org.bukkit.plugin.RegisteredServiceProvider;
+import org.bukkit.plugin.java.JavaPlugin;
+
+public class a extends JavaPlugin implements Listener {
+    public static a main;
+
+    private static a instance;
+
+    public a() {
+        instance = this;
+    }
+
+    public void onEnable() {
+        Bukkit.getConsoleSender().sendMessage("§aMorais-Minas ligado");
+        Bukkit.getConsoleSender().sendMessage("§aIgnorem os erros plugin 100% funcional");
+        getCommand("Minas").setExecutor(new Comandos());
+        saveDefaultConfig();
+        reloadConfig();
+        if (!setupEconomy()) {
+            Bukkit.getPluginManager().disablePlugin(this);
+            return;
+        }
+        setupPermissions();
+        Bukkit.getPluginManager().registerEvents(new b(), this);
+        main = this;
+    }
+
+    public void onDisable() {
+        Bukkit.getConsoleSender().sendMessage("§4Morais-Minas desligado");
+    }
+
+    public static a getPlugin() {
+        return (a) getPlugin(a.class);
+    }
+
+    private Economy econ = null;
+    private Permission perms;
+
+    private boolean setupEconomy() {
+        if (Bukkit.getPluginManager().getPlugin("Vault") == null) {
+            return false;
+        }
+        RegisteredServiceProvider<Economy> rsp = getServer().getServicesManager().getRegistration(Economy.class);
+        if (rsp == null) {
+            return false;
+        }
+        this.econ = ((Economy) rsp.getProvider());
+        return this.econ != null;
+    }
+
+    private boolean setupPermissions() {
+        RegisteredServiceProvider<Permission> rsp = getServer().getServicesManager().getRegistration(Permission.class);
+        this.perms = ((Permission) rsp.getProvider());
+        return this.perms != null;
+    }
+
+    public Economy getEcononomy() {
+        return this.econ;
+    }
+
+    public Permission getPermissions() {
+        return this.perms;
+    }
+
+    public static a getInstance() {
+        return instance;
+    }
+}
